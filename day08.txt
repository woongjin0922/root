@객체지향 프로그램
클래스 >객체 (생성자) = 인스턴스
객체 = 생활속에 모든것들이다.
= 사물의 행동과 형태들은 단위별로 묶어서 생성한다
사물과 속성과 기능을 분석한 다음 데이터 (변수)와 함수로 정의함으로써
실제 세계를 컴퓨처 속에 옮겨 놓은것과 같은 가상세계를 구현 (클래스)하고
실험하면서 시간과 비용을 줄일수있다.

1)객체 지향의 특징
-코드의 재사용이 높다
새로운 코드를 이용할때 기존코드를 쉽게 작성할수있다
-코드의 관리가 용이하다
코드간의 관계를 적은 노력으로 쉽게 코드르 변경한다.
-신뢰성이 높은 프로그래밍을 가능하게 한다
같은 설계도이기 때문에 코드의 불일치가 없다

 @클래스와 객체
클래스를 기반으로 객체를 생성한다
(설계도가 있으니깐 객체를 통해서 여러개의 모델을 만들수있다)
설게도를 구현하고 설계도 안에 대표할수 있는 설명서를 기술한다 ( 기능=속성)
-클래스 정의 : 클래스란 객체를 정의해논것이다
-클래스의 용도 : 클래스는 객체를 생성하는데 사용된다
-객체의 정의 : 실제로 존재하는것. 사물 또는 개념이다
-객체의 용도 : 객체가 가지고 있는 기능과 속성에 따라다르다
유형의 객체 - 책상, 의자 , 자동차 , TV , 스마트폰
무형의 객체 - 수학공식 , 프로그램 에러나 논리적 개념이다

*클래스 ( 설게도)만 잘 만들어 놓는다면 복잡한 제품이라도
객체를 생성해서 사용하기만 하면 된다.

1)클래스를 선언
public class car { // 실행용 클래스 -> car.java(파일이름)
publix ctatic void main() {

}
public class Car_option{//라이브러리 클래스

}
2)클래스 구분
-실행용 클래스 : main 매서를 포함한 클래스 프로그램 실행
-라이브러리 클래스: 별도의 클래스

3)객체와 인스턴스
1.객체의 정의
클래스로부터 객체를 만드느 과정을 클래스의 인스턴스화라고 하며
( instantiate) 어떤 클래스로부터 만들어진 클래스 인스턴스(instanse) 라고 한다.
클래스 ------> (인스턴스화) --- > 인스턴스 (객체)가 된다.
2.객체의 구성요소는 ( 속성과 기능)
객체는 다른 속성과 기능들의 집합이다 ( 생성할떄마다 달리진다 )
속성 (Property) : 멤버 연수,특성, 상태
기능 (function) : 메서드 ,행위 ,함수

@클래스의 구성
클래스 설계도에 들어갈수 있는 요소이다.
생성자로 접근해서 클래스 내부에필드 (변수)와 메소드 (함수)
를 정의하고 사용했다
1)필드 : 객체의 데이터 상태를 저장하는 변수이다.
-필드의 자료형은 기본자료형과 같다.(int=0)
-필드를 초기화 하지 않으면 기본값으로 초기화 된다
-필드를 접근하는 방법은 객체를 생성해서 접근한다

객체명 : 클래스를 이용해 만든 객체이름
필드명 : 만든 객체가 가지고 있는 필드 이름

2)메서드 : 객체의 기능을 담당하는 요소이다
메서드 호출하면 기능을 수행할수 있고 리턴값이 있다 없다
딸라서 결과값을 출력할수 있다.
반환타입 메소드명 () {
//return x O : 반환타입 void 일경우 return 삭제가능
}

 3)생성자 : 클래스를 호출해서 접근할수있는 대상 

@정적 멤버 (static) /인스턴스 멤버 /지역변수
1)인스턴스(멤버변수;lv)
-모든 객체가 같은 필드값을 가질수 있다
-인스턴스를 생성하면 멤버변수의 값을 변화시켜서
따로 선언 가능
-독립적인 저장공간을 가지게 되며 고유한 속성 유지한다

2)정적 (클래스)멤버 변수 )CV)
-객체가 아닌 클래스의 의존적인 요소이다
-객체를 생성하지 않고 변수를 사용할수 있다
-객체를 생성할떄 메모리에 올라가는것이 아니라
프로그램 시작할때 메모리가 적제되는 방식
-전역변수의 성격을 갖고 모든 인스턴스가 공통된 저장곤간을 갖게 된다
(전역변수 메모리를 따로 갖는다)

3)지역 변수 
- 메서드 영역이고 메서드 내에서만 선언된 블록에서만 사용 가능하다 
블록을 벗어나면 소멸되서 사용할수없다.

@메서드
1) 메서드 정의
특정 기능을 수행하기 위해 코드를 하나의 블록으로 묶어 놓은것이다  
 
3)메서드의 구족 (정적 메소드 / 멤버 메소드 )
선언부 : HEADER 
-매개변수 : 입력되는 publix int add ( int a , double b )
-반환 타입 : 리턴값과 반환타입은 일치해야된다
return int 형 === header 반환타입 동일하게 맞춘다
구현부 : body
-지역변수 (lv): 메서드 내에 선언된 변수

메서드란 
1)문장들을 블록{}으로 묶어 놓은것
2)값(입력)을 받아서 처리하고, 결과를 반환(출력)
3)메서드의 장점
-코드의 중복을 줄일수가 있다
-코드의 관리가 쉽다
-코드를 재사용할 수 있다 
-코드가 간결해서 이해하기 쉬워진다
4) 작성지침
-반복적으로 수행되는 여러문장을 메서드로 작성
-하나의 메서드는 한가지 기능만 수행하도록 작성
-int add (int x, int y ) {...}
int add (intx,y) { ... } //에러 ! 매개변수 선언 잘못



