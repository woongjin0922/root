@ 컬렉션 프레임워크
- 프로그램 실행 시 메모리에 자료를 유지하고 관리하며 배열의 제약의 단점을 보완할 수 있습니다.
- 컬렉션 프레임워크는 자료구조(Stack / queue / Tree) 미리 구현할 수 있는 인터페이스 모임이다.

@ List
- 배열과 비슷한 자료 구조로 중복이 허용되며 저장 순서가 유지되는 구조이다.
- 인덱스를 사용해서 데이터를 저장하고 찾을 수는 있지만 배열과 다르게 크기의 제한이 없는 저장 구조이다.
- ArrayList
* JDK 1.2부터 제공된 ArrayList는 내부적으로 배열을 이용할 수 있는 호환성이 좋은 자료구조이다.
* 인덱스의 위치에 저장 공간을 자유롭게 이동하고 저장 / 삭제 할 수는 있지만 그에 대한 과부하는 내가 책임 질 수 없다.
만드는 방법) List <데이터 타입> list = new ArrayList<데이터 타입>();

- LinkedList
데이터의 주소를 가지는 노드 객체가 연결되어 데이터를 저장하는
구종이다. LinkedList는 node라는 객체를 생성해서 인접 데이터를
링크하는 형태로 체인처럼 관리한다
추가/삭제할떄 성능이 좋아진다
*시간이 남으면 소스파일 함께한다

@ Set 컬렉션
순서를 유지하지 않는 데이터 집합이고 데이터 중복을 허용하지 않는다
인뎃스를 부여하지 않기 때문에 데이터 입력된 순서로 출력된다는
보장이 없다

- HashSet
동일한 값 또는 객체를 허용하지 않고 HashSet 값을 비교하여서
두 객체가 같음을 비교할수있다
Set<E> = new HashSet <E>();
1.데이터 저장
2.데이터 삭제

- LinkedHashSet

@ Map
List/set 컬렉션과 다르게 map 인터페이스가 별도록 존재하며
데이터를 List계열의 컬렉션과 다르게 처리한다
중복은 key-허용하지 않고/value-허용하는 방식으로 사용된다

-Hashmap<k,v>
Hash와 속성이 같지만 map. Enpty 구조를 저장하고 해당 객체는
key와 value를 저장한다
검색을 요구하는 데이터는 효과적이지만 
데이터를 저장하고 삭제할때는 느린 편이다
map<KEY,V> map = new HashMap <KEY,V>(); 

@상속,객체배열,스티림

1.자바 프로젝트를 생성한다 (SBS_Labs)
2.student 클래스 GIS 클래스를 각각 생성하고 
 멤버변수와 멤버 함수를 생성한다
3.프로그램 전입점인 main함수(displayinfo 클래스)에서 BufferdReader 이용해서
 2학년.csv 파일을 불러온다
4.파일을 전체적으로 읽어 데이터 개수가 몇 개인지 파악한다
5.GIS배열([])의 객체를 학생수 만큼 생성한다
6.파일을 다시 읽어 GIS 배열 ([]) 객체 요소에 학과,학년.학번,성명,거주지역,이메일을
 할당한다(scanner로 자동으로 읽어낸다)
7.스트림을 닫는다
8.GIS 배열 ([])의 객체에 들어있는 값은 for - each 문장과
 display 멤버함수를 이용해서 출력한다























