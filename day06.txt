-while문
1)조건을 만족하는 동안 블록 {}블록 반복한다
2)조건이 참일경우만 증가하고 증감식은 없다
*for문에 비해 while문 구조문 단순하다.
1.조건식에 의해서 참일경우만 반복이 실행
2.수행될 문장으로 명령문을 처리한다.
3.조건식이 증가해야할경우 내부적으로 증가
4.무한루츠 while(1){//실행될문장};
-->break;(if문에서 배웠다!) 빠져나간다.
#while 표현방식
int i = 0;//초기화를 밖에서 해야한다
shile(i<=10){
System.out.println(i);
i++;//for문의 증감식
}
-do-while 문
1)블록{}을 무조건 1번을 실행문장을 처리한다.
-사용자 입력 받을 유용하다.
-처음 한번은 무조건 실행
2)표현 방법
DO{
//조건식의 연산결과가
//참 일떄 수행될 구현부
//while꼬리야 -> 조건과 상관없이 한번은 실행
}while(조건식);//while꼬리로 들어간다.
*조건식 끝날때 ; 세미클론으로 마무리

@continue문
1)반복문 내에서만 사용될수 있고 반복이
진행되는 도중에 continue문을 만나면 끝으로 이동해서
다음 반복으로 넘어간다.

@break 문
1)자신이 포함된 가장 가까운 반복문을 벗어난다.
(중첩 for = 내부 for)(일반for=자신)
2)if문과 함께 사용되고 특정 조건을 만족할때 반복문을 벗어나게 된다.

@배열의 정의
변수라는 값으로 데이터를 저장하려면 메모리 안에서
연속적으로 값을 삭제하고 다시 추가한다. 자료형 변수를
지정하여서 여러 데이터를 담을 수 있는 구조를 자료구조(data structure)
int arr = {1,2,3,4,5};
*하나의 자료형으로 ㅅ ㅓㄴ언해서 배열을 만든다
1)배열을 선언하는 방법을
자료형 [] 배열이름 = int [] arr;
자료형 배열이름[] = int arr [];
*자료형 뒤에 붙이거나 변수명 뒤에 붙여도 된다!
배열이라는 의미로 선언되려면 가독성 높이는
방법때문에 자료형 뒤에 선언하는것을 선호 !     