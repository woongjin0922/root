메모리에 값을 저장하기 위해 할당받아 사용하는 특정 공간을 (변수)라고 합니다
변수를 선언하기 위해서는 (int,num)이 필요하다
변수의 이름으로 사용할수 없는것 ( 숫자,기호,등등)

@연산자의 종류
값(데이터)_변수에 담은 자료 
*데이터를 처리하고 산출하는 과정이다.
방법:조건에 따라서 데이터를 처리하는 산술 연산자가 달라진다.
거기서 따라서 산출하는 과정이다.
5+5 : 더할수 있는 산출과정 (+)
5*5 : 곱할수 있는 산출과정 (*)
1)연산자 : 연산을 수행하는 기로(+/*)
2)피연산자 : 연산자가 수행하려는 대상
1.  단항 연산자 : 피연산자(operand)가 한개인 경우 //-2
부호 : +-/%
int x = +3;(양수)
int y = -6 ; (음수)
증감 : ++/--
피연산자의 값을 1개씩 증가하거나 감소할때 사용
int x = ++3;
int y = --2;
논리 : ! (not)
int gender = false;
!gender = true

2. 이항 연산자 : 피연산자가 (operand) 두개인 경우
연산자를 가운데 두고 왼쪽 오른쪽에 위치한다
(피연산자 + 연산자 + 피연산자)
//수학에서 자주 나오는 연산식이다. (4+2)
1)산술(5+5)
사칙 연산에서 나오는 산술연산자와 나머지 연산을  추가한다.
종류" +/*/%
*피연산자의 자료형이 일치하지 않은경우 큰자료형으로 변환한다.
2)대입 연산자
오른쪽 피연산자의 값을 왼쪽 피연산자에 대입할때 저장한다
*복합 대입 연산자(=+=-=*=/=%=)
int y = 19;
y=y+1+> y+=1;
y=y-1-> y-=1;
y=y*1->y*=1;
y=y/1->y/=1;
*같은 의미로 간략하게 사용된다 
3)비교 (관계연산자 : >/</>=/<=/==/!=)
피연산자를 부호로 비교하면서 판별하는 연산자이다. (왼쪽에서 오른쪽으로 판단한다)
if(5<6):조건문과 반복문의 조선식으로 사용되며 논맂거인 판단
주의사항 :
1)boolean형을 제외한 모든 자료형에서 사용가능하고 참조형에서는 사용될수 없다.
y+=1;//같은 의미로 간략하게 사용한다.
2)관계 연산자는 2개이상 연속으로 사용할수없다.
if(A(3)<=B(5)) // true
if(A(5)<=B(3)) // false
A<=B==C(X) : A와B 비교한후 결과값을 반환하기 떄문에 연산의 대상이 되지 못한다

4)논리연산자(&&,ㅣㅣ,&,ㅣ,^,!)
1.(&&,&)AND= 논리곱 = A(1) && B(1) : true
2.(ㅣㅣ,ㅣ) OR= 논리합 = A(1) && B(0) : true
3.(^) XOR =배타적 논리합 =  A(1) ^ B(1) : true
4.(!)NOT = NOT(반전) = ~A(0) = 1 : true

5)논리 부정 연산자 (!)NOT                            
true:false / false:true

3. 삼항 연산자 :
피연산자가 3ㅐ인 조건 연산식이다.
삼항 연산자(operand:3개) : 연산을 할수 있는 대상이 3개이다
상항 연산자의 피연산자는 조건으로 사용되는 조건문과 
조건문 결과에 따라 2개로 구성된다.
조건식(피연산1)? 참 (피연산2):거짓(피연산자3)
